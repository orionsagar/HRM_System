@model FestivalBonusSetup

@inject IGlobalHelper _global;
@{
    //var action = ViewBag.Action;
    var title = "Festival Bonus Set Up Assign";

    ViewData["Title"] = $"{title}";
}

@section PageName {
    Festival Bonus Set Up Assign
}
@section Breadcrumb {
    <a href="/dashboard/index">
        <i class="fa fa-home"></i>
    </a>
    <span class="Divider">/</span>
    <span class="section activeCrum">Festival Bonus Set Up Assign</span>
}

@{

    // string[] BCText = new string[] { $"{title}" };
    // string[] BCLink = new string[] { $"Bonus/FestivalBonusSetup" };
    // PageHeaderProps pageHeader = new PageHeaderProps
    //         {
    //             PageTitle = $"{title}",
    //             PageDesc = $"{title}",
    //             //PageCreateLink = createlink,
    //             //PageCreateLinkName = linkname,
    //             BreadcrumbText = BCText,
    //             BreadcrumbLink = BCLink,
    //             IsAdd = ViewBag.IsAdd
    //         };

    var ComId = _global.GetCompID();
    var UserId = _global.GetUserID();
}

<style>
    label {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    #dt-emp-list {
        display: block;
        max-height: 400px;
        overflow-y: auto;
    }
</style>

@Html.AntiForgeryToken()
<!-- Page-body start -->
<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <!-- Ajax data source (Arrays) table start -->
            <div id="loader">
                <div class="overlay"></div>
                <div class="card">
                    <div class="card-block">
                        <div class="row justify-content-center">
                            <partial name="_BonusSetup" />
                            <div class="col-sm-5 px-lg-3">
                                <div class="row">
                                    <input type="hidden" asp-for="EmpId" />
                                    <input type="hidden" asp-for="BonusId" />


                                    <div class="col-sm-12">
                                        <div class="form-group row">
                                            <label asp-for="FestivalTypeId" class="col-sm-12 col-form-label">Festival Name</label>
                                            <div class="col-sm-12">
                                                <select asp-for="FestivalTypeId" asp-items="ViewBag.Festival" required class="form-control form-control-sm custom-select">
                                                </select>
                                                <span asp-validation-for="FestivalTypeId" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12">
                                        <div class="form-group row">
                                            <label asp-for="IsFixed" class="col-sm-12 col-form-label">Is Fixed?</label>
                                            <div class="col-sm-12">
                                                <input asp-for="IsFixed" style="width: 20px; height: 20px; margin-top: 6px;" type="checkbox" />
                                                <span asp-validation-for="IsFixed" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 forFixed">
                                        <div class="form-group row">
                                            <label asp-for="FixedAmount" class="col-sm-12 col-form-label">Fixed Amount</label>
                                            <div class="col-sm-12">
                                                <input asp-for="FixedAmount" type="number" class="form-control form-control-sm" />
                                                <span asp-validation-for="FixedAmount" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-12 forNotFixed">
                                        <div class="form-group row">
                                            <label asp-for="CalcRuleID" class="col-sm-12 col-form-label">Calculation Rule</label>
                                            <div class="col-sm-12">
                                                <select asp-for="CalcRuleID" asp-items="ViewBag.Rules" required class="form-control form-control-sm">
                                                </select>
                                                <span asp-validation-for="CalcRuleID" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-12 forNotFixed" id="forRuleId">
                                        <div class="form-group row">
                                            <label asp-for="Rate" id="AttBonusAmountLable" class="col-sm-12 col-form-label"></label>
                                            <div class="col-sm-12">
                                                <input asp-for="Rate" type="number" class="form-control form-control-sm" />
                                                <span asp-validation-for="Rate" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-10">
                                        <div class="form-group row">
                                            <label asp-for="Remarks" class="col-sm-12 col-form-label">Remarks</label>
                                            <div class="col-sm-12">
                                                <textarea asp-for="Remarks" class="form-control form-control-sm"></textarea>
                                                <span asp-validation-for="Remarks" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>


                                </div>

                                <div class="row justify-content-center">
                                    <div class="col-12 col-sm-12 text-center">
                                        <button class="btn btn-sm btn-primary" id="btnSave">Save</button>
                                        <button class="btn btn-sm btn-warning d-none" id="btnUpdate">Update</button>
                                        <button class="btn btn-sm btn-danger d-none" id="btnDelete">Delete</button>
                                        <button class="btn btn-sm btn-light btn-outline-info" id="btnClear">Clear</button>
                                    </div>
                                </div>
                            </div>
                            <partial name="_FestivalType" />
                        </div>

                        <hr />
                        <div class="row mt-2">

                            <div class="col-sm-12" id="employeeList">
                                <p class="m-1 font-weight-bold">Employee List</p>

                                <div class="table-responsive dt-responsive">

                                    <table id="dt-emp-list" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>
                                                <th>
                                                    <div class="checkbox-fade fade-in-primary ml-3">
                                                        <label class="m-0">
                                                            <input type="checkbox" id="empAllCheck" name="empAllCheck">
                                                            <span class="cr">
                                                                <i class="cr-icon icofont icofont-ui-check txt-primary"></i>
                                                            </span>
                                                        </label>
                                                    </div>
                                                </th>
                                                <th>Employee</th>
                                                <th>Card No</th>
                                                <th>Designation</th>
                                                <th>Joining Date</th>
                                                <th>Section</th>
                                                <th>Department</th>
                                                <th>Category</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>

                                </div>
                            </div>

                            <div class="col-sm-12" id="employee_bonus_set_List">
                                <p class="m-1 font-weight-bold">Employee Bonus Set Up List</p>

                                <div class="table-responsive dt-responsive">

                                    <table id="dt-emp-list_bonus_set" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>
                                                <th>
                                                    <div class="checkbox-fade fade-in-primary ml-3">
                                                        <label class="m-0">
                                                            <input type="checkbox" id="empAllCheck" name="empAllCheck">
                                                            <span class="cr">
                                                                <i class="cr-icon icofont icofont-ui-check txt-primary"></i>
                                                            </span>
                                                        </label>
                                                    </div>
                                                </th>
                                                <th>Festival Type</th>
                                                <th>Rule Id</th>
                                                <th>EmpId</th>
                                                <th>Employee</th>
                                                <th>Card No</th>
                                                <th>Designation</th>
                                                <th>Joining Date</th>
                                                <th>Section</th>
                                                <th>Department</th>
                                                <th>Category</th>
                                                <th>Is Fixed</th>
                                                <th>Fixed Amount</th>
                                                <th>Rate</th>
                                                <th>Festival Name</th>
                                                <th>Rule</th>
                                                <th>Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>

                                </div>
                            </div>

                        </div>
                    </div>

                    
                </div>
            </div>
            <!-- Ajax data source (Arrays) table end -->
        </div>
    </div>
</div>

<!-- Page-body end -->
<input type="hidden" id="IsView" name="IsView" value="@ViewBag.IsView" />
<input type="hidden" id="IsAdd" name="IsAdd" value="@ViewBag.IsAdd" />
<input type="hidden" id="IsDelete" name="IsDelete" value="@ViewBag.IsDelete" />
<input type="hidden" id="IsEdit" name="IsEdit" value="@ViewBag.IsEdit" />




@section Scripts {
    <script>
        let empSelectedAttBonus = [];
        let OtherAttBonusIdForSelectOption = "0";
        let emp_bonus_list_table;

        $(document).ready(function () {
            //$("a.grouped_elements").fancybox({
            //    maxWidth: 1280,
            //    maxHeight: 720,
            //    width: '100%',
            //    height: '100%',
            //});

            $("#IsFixed").on('click', function () {
                FixedAmountShowHide();
            });

            $("#CalcRuleID").change(function () {
                AmountLableChange();
            });

            $('#dt-emp-list_bonus_set tbody').on('click', 'tr', function () {
                //const tr = $(this).closest('tr')
                //$(tr).toggleClass('selected');

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    clearData();
                } else {
                    emp_list_table_bonus_set.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    const bonusId = emp_list_table_bonus_set.row(this).data()[0];
                    empFestivalBonus(bonusId);
                }
            });

            $("#Type_Filter,#AttBonusName, #CalcRuleID,#FestivalTypeId").select2();

            $("#FromDate_Filter, #ToDate_Filter, #ApplyDate").datepicker({
                dateFormat: 'dd-mm-yy',
                changeYear: true,
                changeMonth: true,
            });

            $("#FromDate_Filter, #ToDate_Filter, #ApplyDate").datepicker("setDate", new Date());

            //emp_bonus_list_table = $('#dt-emp-bonus-list').DataTable({
            //    paging: false,
            //    select: true,
            //    "dom": '<"pull-left"f><"pull-right"l>tip',
            //    //scrollY: 250,
            //    //searching:false,
            //    columnDefs: [
            //        {
            //            targets: 0,
            //            visible: false,
            //            searchable: false,
            //        },
            //    ]
            //});

            $("#btnEmpFilter").click(function () {
                divShow("#employeeList");
                divHide("#employee_bonus_set_List");
                let filter = {
                    EffectiveDate: $("#EffectiveDate").val(),
                    EmpCategoryId_Filter: $("#EmpCategoryId_Filter").val(),
                    DesignationId_Filter: $("#DesignationId_Filter").val(),
                    SectionId_Filter: $("#SectionId_Filter").val(),
                    DepartmentId_Filter: $("#DepartmentId_Filter").val(),
                    CardNo_Filter: $("#CardNo_Filter").val() || "",
                    EmpName_Filter: $("#EmpName_Filter").val() || "",
                    CompId: '@ComId',
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LoadEmployeeNoInBonusSet", "Bonus")",
                    data: filter,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        HTMLEmployeeListBonus(response);
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            });

            $("#btnEmpBonusSetUpFilter").click(function () {
                divShow("#employee_bonus_set_List");
                divHide("#employeeList");
                let filter = {
                    //EffectiveDate: $("#EffectiveDate").val(),
                    CardNo_Filter: $("#CardNo_Filter").val() || "",
                    EmpCategoryId_Filter: $("#EmpCategoryId_Filter").val(),
                    DepartmentId_Filter: $("#DepartmentId_Filter").val(),
                    DesignationId_Filter: $("#DesignationId_Filter").val(),
                    SectionId_Filter: $("#SectionId_Filter").val(),
                    //EmpName_Filter: $("#EmpName_Filter").val() || "",
                    CompId: '@ComId',
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LoadEmployeeSearchFestivalBonusSetUp", "Bonus")",
                    data: filter,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        //HTMLEmployeeListBonus(response);
                        HTMLEmpFestivalBonusSetUpList(response);
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            });



        @*$("#btnBonusFind").click(function () {
            divShow("#bonusList");
            divHide("#employeeList");

            let filter = {
            FromDate_Filter: $("#FromDate_Filter").val(),
            ToDate_Filter: $("#ToDate_Filter").val(),
            Type_Filter: $("#Type_Filter").val()||"",
            //FindCardNo_Filter: $("#FindCardNo_Filter").val()||"",
            CompId: '@ComId',
            }

            $.ajax({
            type: "POST",
            url: "@Url.Action("LoadEmployeeFestivalBonus", "Bonus")",
            data: filter,
            beforeSend: function (xhr) {
            xhr.setRequestHeader("XSRF-TOKEN",
            $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
            HTMLEmpFestivalBonusList(response);
            },
            failure: function (response) {
            DangerPNotify(response.responseText);
            },
            error: function (response) {
            DangerPNotify(response.responseText);
            }
            });

            });*@

                $("#btnDelete").click(function () {
                    if (!confirm("Are you confirm to delete?")) {
                        return;
                    }
                    const BonusID = $("#BonusId").val();

                    if (BonusID == "" || BonusID == 0) {
                        WarningPNotify("Please select Bonus data!!");
                        return;
                    }

                    $.ajax({
                        type: "DELETE",
                        url: "@Url.Action("DeleteFestivalBonusSetUp", "Bonus")",
                        data: { BonusID },
                        beforeSend: function (xhr) {
                            xhr.setRequestHeader("XSRF-TOKEN",
                                $('input:hidden[name="__RequestVerificationToken"]').val());
                        },
                        //contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (res) {
                            if (!res.isError) {
                                SuccessPNotify(res.message);
                                clearData();
                                // showSaveButton();
                                $("#btnBonusFind").click();
                            } else {
                                DangerPNotify(res.message);
                            }
                        },
                        failure: function (response) {
                            DangerPNotify(response.responseText);
                        },
                        error: function (response) {
                            DangerPNotify(response.responseText);
                        }
                    });

                })

            $("#btnSave").click(function () {
                let employees = [];
                //const OtherAttBonusId = $("#FestivalBonusID").val()||"";
                //const ApplyAmount = $("#Amount").val()||0;
                const BonusId = $("#BonusId").val();
                const FestivalTypeId = $("#FestivalTypeId").val();
                const IsFixed = $("#IsFixed").is(":checked");
                const CalcRuleID = $("#CalcRuleID").val() || 0;
                const Rate = $("#Rate").val() || 0;
                const FixedAmount = $("#FixedAmount").val() || 0;
                const Remarks = $("#Remarks").val();


                //if (Type == "" || ApplyDate == "") {
                //    WarningPNotify("Please select Type & Date");
                //    return;
                //}

                //if (IsFixed) {
                //    if (FixedAmount == 0) {
                //        WarningPNotify("Please assign Fixed Amount!");
                //        return;
                //    }
                //} else {
                //    const ruleName = $("#CalcRuleID option:selected").text().trim();
                //    if (Rate == 0 && ruleName != "Gross Salary" && ruleName != "Basic Salary") {
                //        WarningPNotify("Please assign Rate!");
                //        return;

                //    }

                //}

                $("input[name='empCheckbox']:checked").each(function () {
                    //console.log($(this).val());
                    employees.push(
                        {
        @nameof(FestivalBonusSetup.BonusId) : 0,
        @nameof(FestivalBonusSetup.EmpId) : $(this).val(),
        @nameof(FestivalBonusSetup.FestivalTypeId) : FestivalTypeId,
        @nameof(FestivalBonusSetup.CalcRuleID) : CalcRuleID,
        @nameof(FestivalBonusSetup.Rate) : Rate,
        @nameof(FestivalBonusSetup.IsFixed) : IsFixed,
        @nameof(FestivalBonusSetup.FixedAmount) : FixedAmount,
        @nameof(FestivalBonusSetup.Remarks) : Remarks,
                                });
            });

            if (employees.length < 1) {
                WarningPNotify("Please select Employee");
                return;
            }

            $.ajax({
                type: "POST",
                url: "@Url.Action("CreateFestivalBonusSetup", "Bonus")",
                data: { model: employees },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (res) {
                    if (!res.isError) {
                        // SuccessPNotify("Employee Job Calender Updated");
                        SuccessPNotify(res.message);
                        // Redirect to the desired URL
                        window.location.href = "/Bonus/FestivalBonusGenerate";
                        //clearData();
                        //$("#btnBonusFind").click();
                    } else {
                        DangerPNotify(res.message);
                    }

                },
                failure: function (response) {
                    DangerPNotify(response.responseText);
                },
                error: function (response) {
                    DangerPNotify(response.responseText);
                }
            });


        })

        $("#btnUpdate").click(function () {
            let employees = [];
            const FestivalTypeId = $("#FestivalTypeId").val();
            const BonusId = $("#BonusId").val() || 0;
            const empId = $("#EmpId").val() || "";
            const IsFixed = $("#IsFixed").is(":checked");
            const CalcRuleID = $("#CalcRuleID").val() || 0;
            const Rate = $("#Rate").val() || 0;
            const FixedAmount = IsFixed ? $("#FixedAmount").val() : 0 || 0;
            const Remarks = $("#Remarks").val();


            if (BonusId == 0) {
                WarningPNotify("No data found. Please select sanction data again.");
                return;
            }

            //if (ApplyDate == "") {
            //    WarningPNotify("Please select Type & Date.");
            //    return;
            //}

            employees.push(
                {
        @nameof(FestivalBonusSetup.BonusId) : BonusId,
        @nameof(FestivalBonusSetup.EmpId) : empId,
        @nameof(FestivalBonusSetup.IsFixed) : IsFixed,
        @nameof(FestivalBonusSetup.CalcRuleID) : CalcRuleID,
        @nameof(FestivalBonusSetup.FestivalTypeId) : FestivalTypeId,
        @nameof(FestivalBonusSetup.Rate) : Rate,
        @nameof(FestivalBonusSetup.FixedAmount) : FixedAmount,
        @nameof(FestivalBonusSetup.Remarks) : Remarks,
                            });


        if (employees.length < 1) {
            WarningPNotify("Please select Employee");
            return;
        }

        //console.log(employees);

        $.ajax({
            type: "POST",
            url: "@Url.Action("CreateFestivalBonusSetup", "Bonus")",
            data: { model: employees },
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            //contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (res) {
                if (!res.isError) {
                    // SuccessPNotify("Employee Job Calender Updated");
                    SuccessPNotify(res.message);
                    //window.location.href = "/Bonus/FestivalBonusGenerate";
                    clearData();
                    $("#btnEmpBonusSetUpFilter").click();
                    //$("#btnBonusFind").click();
                } else {
                    DangerPNotify(res.message);
                }

            },
            failure: function (response) {
                DangerPNotify(response.responseText);
            },
            error: function (response) {
                DangerPNotify(response.responseText);
            }
        });
                    });


        $("#empAllCheck").click(function () {
            let check = $(this).is(":checked");
            if (check) {
                $("input[name='empCheckbox']").prop('checked', true);
            } else {
                $("input[name='empCheckbox']").prop('checked', false);
            }
        });

        $("#btnClear").click(function () {
            clearData();
            showSaveButton();
        });

        $("#btnEmpFilter").click();

        FixedAmountShowHide();
        //AmountLableChange();

        divShow("#employeeList");
        divHide("#bonusList");
                });

        function HTMLEmployeeListBonus(tr) {
            tr = tr || [];

            emp_list_table.clear().draw();

            tr.map(a => {
                a.joiningDate = getDateString(a.joiningDate);
                emp_list_table.row.add([
                    a.empId,
                    a.name,
                    a.cardNo,
                    a.designationName,
                    a.joiningDate,
                    a.sectionName,
                    a.departmentName,
                    a.categoryName,
                ]);
            });

            emp_list_table.draw();
        }

        emp_list_table_bonus_set = $('#dt-emp-list_bonus_set').DataTable({
            paging: false,
            select: true,
            "dom": '<"pull-left"f><"pull-right"l>tip',
            //scrollY: 250,
            //searching:false,
            columnDefs: [
                {
                    targets: 0,
                    visible: false,
                    searchable: false,
                },
                {
                    targets: 1,
                    visible: false,
                    searchable: false,
                },
                {
                    targets: 2,
                    visible: false,
                    searchable: false,
                },
                {
                    targets: 3,
                    visible: false,
                    searchable: false,
                },
            ]

        });

        function HTMLEmpFestivalBonusSetUpList(tr) {
            tr = tr || [];
            //emp_bonus_list_table.clear().draw();
            emp_list_table_bonus_set.clear().draw();

            tr.map(a => {
                console.log(a);
                a.joiningDate = getDateString(a.joiningDate);
                emp_list_table_bonus_set.row.add([
                    a.bonusId,
                    a.festivalTypeId,
                    a.calcRuleId,
                    a.empId,
                    a.name,
                    a.cardNo,
                    a.designationName,
                    a.joiningDate,
                    a.sectionName,
                    a.departmentName,
                    a.categoryName,
                    a.isFixed,
                    a.fixedAmount,
                    a.rate,
                    a.festivalName,
                    a.ruleName,
                    a.remarks


                ]);
            });

            emp_list_table_bonus_set.draw();
        }



        //function HTMLEmpFestivalBonusList(tr) {
        //    tr = tr || [];
        //    //console.log(tr);
        //    emp_bonus_list_table.clear().draw();

        //    tr.map(a => {
        //        a.applyDate = getDateString(a.applyDate);
        //        a.isFixed = a.isFixed?"Yes":"No";
        //        emp_bonus_list_table.row.add([
        //            a.festivalBonusID,
        //            a.name,
        //            a.cardNo,
        //            a.sectionName,
        //            a.designationName,
        //           // a.categoryName,
        //           // a.departmentName,
        //            a.isFixed,
        //            a.amount,
        //            a.rate,
        //            a.applyDate,
        //            a.ruleName,
        //            a.remarks,
        //        ]);
        //    });

        //    emp_bonus_list_table.draw();
        //}

        function AmountLableChange() {

            let rule = $("#CalcRuleID option:selected").text().trim();

            if (rule == "Gross Salary" || rule == "Basic Salary" || rule == "50% Gross Salary" || rule == "100% Gross Salary") {
                if (!$("#forRuleId").hasClass("d-none")) {
                    $("#forRuleId").addClass("d-none")
                }
            }
            else if (rule == "One Day Gross" || rule == "One Day Basic") {
                if ($("#forRuleId").hasClass("d-none")) {
                    $("#forRuleId").removeClass("d-none")
                }
                if (rule == "One Day Gross") {
                    $("#AttBonusAmountLable").text("Gross Salary of Days");
                }
                if (rule == "One Day Basic") {
                    $("#AttBonusAmountLable").text("Basic Salary of Days");
                }

            }
            else {
                if ($("#forRuleId").hasClass("d-none")) {
                    $("#forRuleId").removeClass("d-none")
                }
                rule = rule.replace("Some ", "");
                $("#AttBonusAmountLable").text(rule);
            }

        }

        function FixedAmountShowHide() {
            //debugger;
            if ($("#IsFixed").is(":checked")) {
                $(".forFixed").each(function () {
                    if ($(this).hasClass("d-none")) {
                        $(this).removeClass("d-none");
                    }
                });

                $(".forNotFixed").each(function () {
                    if (!$(this).hasClass("d-none")) {
                        $(this).addClass("d-none");
                    }
                });
            }
            else {
                $(".forNotFixed").each(function () {
                    if ($(this).hasClass("d-none")) {
                        $(this).removeClass("d-none");
                    }
                });

                $(".forFixed").each(function () {
                    if (!$(this).hasClass("d-none")) {
                        $(this).addClass("d-none");
                    }
                });
                AmountLableChange();
            }
        }

        function divShow(selector) {
            if ($(selector).hasClass("d-none")) {
                $(selector).removeClass("d-none");
            }
        }

        function divHide(selector) {
            if (!$(selector).hasClass("d-none")) {
                $(selector).addClass("d-none");
            }
        }

        function getDateString(date) {
            var d = new Date(date);
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var date = day + "-" + month + "-" + year;
            return date;
        }

        function empFestivalBonus(BonusId) {
            let FestivalTypeIdBonusid = { festivalTypeId: 0, bonusId: BonusId }

            $.ajax({
                type: "POST",
                url: "@Url.Action("LoadEmployeeByFestivalType", "Bonus")",
                data: FestivalTypeIdBonusid,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (!response.data.isError) {
                        SetBonusData(response.data);
                    }
                    else {
                        WarningPNotify(response.data.message);
                        clearData();
                    }
                },
                failure: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedAttBonus = [];
                },
                error: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedAttBonus = [];
                }
            });

        }

        function SetBonusData(attBonus) {
            console.log(attBonus);
            /*const { empId, bonusId,festivalTypeId, isFixed, calcRuleID, fixedAmount, rate, remarks } = attBonus;*/
            attBonus.map(a => {
                $("#EmpId").val(a.empId);
                $("#BonusId").val(a.bonusId);
                $("#IsFixed").prop('checked', a.isFixed);
                $("#CalcRuleID").val(`${a.calcRuleId}`).change();
                $("#FestivalTypeId").val(`${a.festivalTypeId}`).change();
                $("#FixedAmount").val(a.fixedAmount);
                $("#Rate").val(a.rate);
                $("#Remarks").val(a.remarks);
            })
            showUpdateButton();
            FixedAmountShowHide();

        }

        function clearData() {
            $("#EmpId").val("");
            $("#BonusID").val("");
            $("#IsFixed").prop('checked', false);
            $("#CalcRuleID").prop("selectedIndex", 0).change();
            $("#FixedAmount").val("");
            $("#Rate").val("");
            //$("#ApplyDate").val(getDateString(new Date()));
            $("#Remarks").val("");

            showSaveButton();
            FixedAmountShowHide();
            // recall employee list for update emp history id
            //$("#btnEmpFilter").click();
        }

        function showSaveButton() {

            if ($("#btnSave").hasClass("d-none")) {
                $("#btnSave").removeClass("d-none");
            }

            if (!$("#btnUpdate").hasClass("d-none")) {
                $("#btnUpdate").addClass("d-none");
            }

            if (!$("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").addClass("d-none");
            }


        }

        function showUpdateButton() {

            if (!$("#btnSave").hasClass("d-none")) {
                $("#btnSave").addClass("d-none");
            }

            if ($("#btnUpdate").hasClass("d-none")) {
                $("#btnUpdate").removeClass("d-none");
            }
            if ($("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").removeClass("d-none");
            }

        }

    </script>
}

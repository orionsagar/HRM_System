@model FestivalBonus

@inject IGlobalHelper _global;
@{
    //var action = ViewBag.Action;
    var title = "Festival Bonus Generate";

    ViewData["Title"] = $"{title}";
}

@section PageName {
    Festival Bonus Generate
}
@section Breadcrumb {
    <a href="/dashboard/index">
        <i class="fa fa-home"></i>
    </a>
    <span class="Divider">/</span>
    <span class="section activeCrum">Festival Bonus Generate</span>
}


@{

    // string[] BCText = new string[] { $"{title}" };
    // string[] BCLink = new string[] { $"Bonus/FestivalBonusSetup" };

    // PageHeaderProps pageHeader = new PageHeaderProps
    // {
    //     PageTitle = $"{title}",
    //     PageDesc = $"{title}",
    //     //PageCreateLink = createlink,
    //     //PageCreateLinkName = linkname,
    //     BreadcrumbText = BCText,
    //     BreadcrumbLink = BCLink,
    //     IsAdd = ViewBag.IsAdd
    // };
    var ComId = _global.GetCompID();
    var UserId = _global.GetUserID();
}

<style>
    label {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    #dt-emp-list_bonus_set {
        display: block;
        max-height: 400px;
        overflow-y: auto;
    }
    .hide_me {
        display: none;
    }

    li[data-dtr-index="4"] {
        display: none;
    }

    .table-container {
        overflow-x: auto;
    }

        .table-container thead th {
            position: sticky;
            top: 0;
            background-color: #fff;
            z-index: 1;
        }


</style>

@Html.AntiForgeryToken()
<!-- Page-body start -->
<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <!-- Ajax data source (Arrays) table start -->
            <div id="loader">
                <div class="overlay"></div>
                <div class="card">
                    @* <div class="card-header">
                        @await Component.InvokeAsync("PageHeader", pageHeader)
                    </div> *@
                    <div class="card-block">
                        @*@await Component.InvokeAsync("EmployeeFilter")*@
                        <div class="row justify-content-center">
                            <partial name="_findBonus" />

                            <div class="col-sm-6">
                                <div class="row">
                                    <input type="hidden" asp-for="EmpId" />
                                    <input type="hidden" asp-for="FestivalBonusID" />

                                    <div class="col-sm-12">
                                        <div class="form-group row">
                                            <label asp-for="ApplyDate" class="col-sm-12 col-form-label">Apply Date</label>
                                            <div class="col-sm-12">
                                                <input asp-for="ApplyDate" required type="text" class="form-control form-control-sm" />
                                                <span asp-validation-for="ApplyDate" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-12">
                                        <div class="form-group row">
                                            <label asp-for="FestivalTypeId" class="col-sm-12 col-form-label">Festival Name</label>
                                            <div class="col-sm-12">
                                                <select asp-for="FestivalTypeId" asp-items="ViewBag.Festival" required class="form-control form-control-sm custom-select">
                                                </select>
                                                <span asp-validation-for="FestivalTypeId" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="col-sm-10">
                                            <div class="form-group row">
                                                <label asp-for="IsFixed" class="col-sm-4 col-form-label">Is Fixed?</label>
                                                <div class="col-sm-8">
                                                    <input asp-for="IsFixed" style="width: 20px; height: 20px; margin-top: 6px;" type="checkbox" />
                                                    <span asp-validation-for="IsFixed" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>*@

                                    @*<div class="col-sm-10 forFixed">
                                            <div class="form-group row">
                                                <label asp-for="FixedAmount" class="col-sm-4 col-form-label">Fixed Amount</label>
                                                <div class="col-sm-8">
                                                    <input asp-for="FixedAmount" type="number" class="form-control form-control-sm" />
                                                    <span asp-validation-for="FixedAmount" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>*@

                                    @*<div class="col-sm-10 forNotFixed">
                                        <div class="form-group row">
                                            <label asp-for="CalcRuleID" class="col-sm-4 col-form-label">Calculation Rule</label>
                                            <div class="col-sm-8">
                                                <select asp-for="CalcRuleID" asp-items="ViewBag.Rules" required class="form-control form-control-sm">
                                                </select>
                                                <span asp-validation-for="CalcRuleID" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="col-sm-10 forNotFixed" id="forRuleId">
                                        <div class="form-group row">
                                            <label asp-for="Rate" id="AttBonusAmountLable" class="col-sm-4 col-form-label"></label>
                                            <div class="col-sm-8">
                                                <input asp-for="Rate" type="number" class="form-control form-control-sm" />
                                                <span asp-validation-for="Rate" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>*@

                                    <div class="col-sm-12">
                                        <div class="form-group row">
                                            <label asp-for="Remarks" class="col-sm-12 col-form-label">Remarks</label>
                                            <div class="col-sm-12">
                                                <textarea asp-for="Remarks" class="form-control form-control-sm"></textarea>
                                                <span asp-validation-for="Remarks" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>


                                </div>

                                <div class="row justify-content-center">
                                    <div class="col-12 col-sm-8 text-center">
                                        <button class="btn btn-sm btn-primary" id="btnSave">Save</button>
                                        <button class="btn btn-sm btn-warning d-none" id="btnUpdate">Update</button>
                                        <button class="btn btn-sm btn-danger d-none" id="btnDelete">Delete</button>
                                        <button class="btn btn-sm btn-light btn-outline-info" id="btnClear">Clear</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr />
                        <div class="row mt-2">

                            <div class="col-sm-12" id="employeeList">
                                <p class="m-1 font-weight-bold">Employee bonus List</p>

                                <div class="table-responsive table-container dt-responsive">

                                    <table id="dt-emp-list_bonus_set" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>

                                                <th>

                                                    <div class="checkbox-fade fade-in-primary ml-3">
                                                        <label class="m-0">
                                                            <input type="checkbox" id="empAllCheck" name="empAllCheck">
                                                            <span class="cr">
                                                                <i class="cr-icon icofont icofont-ui-check txt-primary"></i>
                                                            </span>
                                                        </label>
                                                    </div>
                                                </th>
                                                <th>Employee</th>
                                                <th>Card No</th>
                                                <th>Designation</th>
                                                <th>Joining Date</th>
                                                <th>Section</th>
                                                <th>Department</th>
                                                <th>Category</th>
                                                <th>Is Fixed</th>
                                                <th>Fixed Amount</th>
                                                <th>Rate</th>
                                                <th>Rule</th>
                                                <th>Festival Name</th>

                                                <th>Remarks</th>
                                                <th class="d-none">Rule Id</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>

                                </div>
                            </div>

                            <div class="col-sm-12 d-none" id="bonusList">
                                <p class="m-1 font-weight-bold">Festival Generate Bonus List</p>

                                <div class="table-responsive dt-responsive">

                                    <table id="dt-emp-bonus-list" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>
                                                <th class="d-none">id</th>
                                                <th>Name</th>
                                                <th>Card No</th>
                                                <th>Section</th>
                                                <th>Designation</th>

                                                @*<th>Category</th>
                                                    <th>Department</th>*@
                                                <th>Is Fixed</th>
                                                <th>Amount</th>
                                                <th>Rate</th>
                                                <th>Apply Date</th>
                                                <th>Rule</th>
                                                <th>Festival Name</th>
                                                <th>Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>


                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- Ajax data source (Arrays) table end -->
            </div>
        </div>
    </div>
</div>
<!-- Page-body end -->
<input type="hidden" id="IsView" name="IsView" value="@ViewBag.IsView" />
<input type="hidden" id="IsAdd" name="IsAdd" value="@ViewBag.IsAdd" />
<input type="hidden" id="IsDelete" name="IsDelete" value="@ViewBag.IsDelete" />
<input type="hidden" id="IsEdit" name="IsEdit" value="@ViewBag.IsEdit" />




@section Scripts {
    <script>
        let empSelectedAttBonus = [];
        let OtherAttBonusIdForSelectOption = "0";
        let emp_bonus_list_table;

        $(document).ready(function () {

            $("#IsFixed").on('click', function () {
                FixedAmountShowHide();
            });

            $("#FestivalTypeId").change(function () {
                AmountLableChange();
            });

            $('#dt-emp-bonus-list tbody').on('click', 'tr', function () {
                //const tr = $(this).closest('tr')
                //$(tr).toggleClass('selected');

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    clearData();
                } else {
                    emp_bonus_list_table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    const bonusId = emp_bonus_list_table.row(this).data()[0];
                    empFestivalBonus(bonusId);
                    divShow("#bonusList");
                    divHide("#employeeList");
                }
            });

            $("#Type_Filter,#AttBonusName, #CalcRuleID,#FestivalTypeId,#typeId").select2();

            $("#FromDate_Filter, #ToDate_Filter").datepicker({
                dateFormat: 'dd-mm-yy',
                changeYear: true,
                changeMonth: true,
                //showButtonPanel: true,
                //yearRange: '1900:' + new Date().getFullYear(), 
            });
            $("#ApplyDate").datepicker({
                dateFormat: 'dd-mm-yy',
                changeYear: true,
                changeMonth: true,
                minDate: 0 // Set the minimum date to today (0 represents today)
            });

            $("#FromDate_Filter, #ToDate_Filter, #ApplyDate").datepicker("setDate", new Date());

            emp_list_table_bonus_set = $('#dt-emp-list_bonus_set').DataTable({
                paging: false,
                "dom": '<"pull-left"f><"pull-right"l>tip',
                //dom: '<"top"i>rt<"bottom"flp><"clear">',
                //scrollY: 250,
                //searching:false,
                fixedHeader: {
                    headerOffset: 50
                },
                columnDefs: [
                    {
                        targets: 0,
                        searching: false,
                        "orderable": false,
                        render: function (data) {
                            return ` <div class="checkbox-fade fade-in-primary">
                                     <label class="m-0">
                                         <input type="checkbox" name="empCheckbox" value="${data}">
                                         <span class="cr">
                                             <i class="cr-icon icofont icofont-ui-check txt-primary"></i>
                                         </span>
                                     </label>
                                 </div>`
                        }
                    },
                    {
                        targets: 4,
                        visible: false,
                        searchable: false,
                    },
                    {
                        targets: 6,
                        visible: false,
                        searchable: false,
                    },
                    {
                        targets: 7,
                        visible: false,
                        searchable: false,
                    },
                   
                    {
                        targets: 14,
                        visible: false,
                        searchable: false,
                    },
                ]
            });




         

       
            emp_bonus_list_table = $('#dt-emp-bonus-list').DataTable({
                paging: false,
                select: true,
                "dom": '<"pull-left"f><"pull-right"l>tip',
                //scrollY: 250,
                //searching:false,
                /* aoColumnDefs: [{ "sClass": "hide_me", "aTargets": [12] }], responsive: true,*/
                columnDefs: [
                    {
                        targets: 0,
                        visible: false,
                        searchable: false,
                    },
                    //{
                    //    targets: 1,
                    //    visible: false,
                    //    searchable: false,
                    //},
                ],
            });

            function HTMLEmpFestivalBonusList(tr) {
                tr = tr || [];
                //console.log(tr);
                emp_bonus_list_table.clear().draw();

                tr.map(a => {
                    a.applyDate = getDateString(a.applyDate);
                    a.isFixed = a.isFixed ? "Yes" : "No";
                    emp_bonus_list_table.row.add([
                        a.festivalBonusID,
                        a.name,
                        a.cardNo,
                        a.sectionName,
                        a.designationName,
                        // a.categoryName,
                        // a.departmentName,
                        a.isFixed,
                        a.amount,
                        a.rate,
                        a.applyDate,
                        a.ruleName,
                        a.festivalName,
                        a.remarks,
                    ]);
                });

                emp_bonus_list_table.draw();
            }

            $("#btnBonusFind").click(function () {
                divShow("#bonusList");
                divHide("#employeeList");

                let filter = {
                    FromDate_Filter: $("#FromDate_Filter").val(),
                    ToDate_Filter: $("#ToDate_Filter").val(),
                    Type_Filter: $("#Type_Filter").val()||"",
                    //FindCardNo_Filter: $("#FindCardNo_Filter").val()||"",
                    festivalTypeId : document.getElementById("typeId").value||"",
                    CompId: '@ComId',
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LoadEmployeeFestivalBonus", "Bonus")",
                    data: filter,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        HTMLEmpFestivalBonusList(response);
                        divShow("#bonusList");
                        divHide("#employeeList");
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            });

            $("#btnDelete").click(function () {
                if (!confirm("Are you confirm to delete?")) {
                    return;
                }
                const festivalBonusID = $("#FestivalBonusID").val();

                if (festivalBonusID == "" || festivalBonusID == 0) {
                    WarningPNotify("Please select Bonus data!!");
                    return;
                }

                $.ajax({
                    type: "DELETE",
                    url: "@Url.Action("DeleteFestivalBonus", "Bonus")",
                    data: { festivalBonusID },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                            SuccessPNotify(res.message);
                            clearData();
                           // showSaveButton();
                            $("#btnBonusFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            })

            $("#btnSave").click(function () {
                let employees = [];
            
                const ApplyDate = $("#ApplyDate").val();
              
                const FestivalTypeId = $("#FestivalTypeId").val()||0;
              

                $("input[name='empCheckbox']:checked").each(function () {
                    //console.log($(this).val());
                    const empId = $(this).val();
                    const row = emp_list_table_bonus_set.row($(this).closest("tr")).data();
                    const IsFixed = row[8]; // Get the FixedAmount from the 8th column of the row
                    const FixedAmount = row[9]; // Get the FixedAmount from the 9th column of the row
                    const Rate = row[10]; // Get the Rate from the 10th column of the row
                    const Remarks = row[13]; // Get the Remarks from the 13th column of the row
                    const CalcRuleID = row[14]; // Get the CalcRuleID from the 14th column of the row
                  
                    employees.push(
                        {
                            @nameof(FestivalBonus.FestivalBonusID) : 0,
                            @nameof(FestivalBonus.EmpId) : empId,
                            @nameof(FestivalBonus.ApplyDate) : ApplyDate,
                            @nameof(FestivalBonus.IsFixed) : IsFixed,
                            @nameof(FestivalBonus.CalcRuleID) : CalcRuleID,
                            @nameof(FestivalBonus.Rate) : Rate,
                            @nameof(FestivalBonus.FixedAmount) : FixedAmount,
                            @nameof(FestivalBonus.FestivalTypeId) : FestivalTypeId,
                            @nameof(FestivalBonus.Remarks) : Remarks,
                        });
                });

                if (employees.length<1) {
                    WarningPNotify("Please select Employee");
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FestivalBonusCreate", "Bonus")",
                    data: {model:employees},
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                           // SuccessPNotify("Employee Job Calender Updated");
                            SuccessPNotify(res.message);
                            clearData();
                            $("#btnBonusFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }

                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });


            })

            $("#btnUpdate").click(function () {
                let employees = [];

                const OtherAttBonusId = $("#FestivalBonusID").val()||0;
                const empId = $("#EmpId").val()||"";

                const ApplyDate = $("#ApplyDate").val();
                const IsFixed = $("#IsFixed").is(":checked");
                const CalcRuleID = $("#CalcRuleID").val()||0;
                const Rate = $("#Rate").val()||0;
                const FixedAmount = $("#FixedAmount").val()||0;
                const Remarks = $("#Remarks").val();


                if (OtherAttBonusId==0) {
                    WarningPNotify("No data found. Please select sanction data again.");
                    return;
                }

                if (ApplyDate == "") {
                    WarningPNotify("Please select Type & Date.");
                    return;
                }

                employees.push(
                    {
                        @nameof(FestivalBonus.FestivalBonusID) : OtherAttBonusId,
                        @nameof(FestivalBonus.EmpId) : empId,
                        @nameof(FestivalBonus.ApplyDate) : ApplyDate,
                        @nameof(FestivalBonus.IsFixed) : IsFixed,
                        @nameof(FestivalBonus.CalcRuleID) : CalcRuleID,
                        @nameof(FestivalBonus.Rate) : Rate,
                        @nameof(FestivalBonus.FixedAmount) : FixedAmount,
                        @nameof(FestivalBonus.Remarks) : Remarks,
                    });


                if (employees.length<1) {
                    WarningPNotify("Please select Employee");
                    return;
                }

                //console.log(employees);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("FestivalBonusCreate", "Bonus")",
                    data: {model:employees},
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                           // SuccessPNotify("Employee Job Calender Updated");
                            SuccessPNotify(res.message);
                            //clearData();
                            $("#btnBonusFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }

                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });
            });


            $("#empAllCheck").click(function () {
                let check = $(this).is(":checked");
                if (check) {
                    $("input[name='empCheckbox']").prop('checked', true);
                } else {
                    $("input[name='empCheckbox']").prop('checked', false);
                }
            });

            $("#btnClear").click(function () {
                clearData();
                showSaveButton();
            });

            $("#btnEmpFilter").click();

            FixedAmountShowHide();
            //AmountLableChange();

            divShow("#employeeList");
            divHide("#bonusList");
        });

        function HTMLEmployeeListBonus(tr) {
            tr = tr || [];
            //emp_bonus_list_table.clear().draw();
            emp_list_table_bonus_set.clear().draw();

            tr.map(a => {
                a.joiningDate = getDateString(a.joiningDate);
                emp_list_table_bonus_set.row.add([
                    a.empId,
                    a.name,
                    a.cardNo,
                    a.designationName,
                    a.joiningDate,
                    a.sectionName,
                    a.departmentName,
                    a.categoryName,
                    a.isFixed,
                    a.fixedAmount,
                    a.rate,
                    a.ruleName,
                    a.festivalName,
                    a.remarks,
                    a.calcRuleId
                    
                ]);
            });

            emp_list_table_bonus_set.draw();
        }

        

        function AmountLableChange() {

            let rule = $("#CalcRuleID option:selected").text().trim();

            let festivalTypeId = $("#FestivalTypeId").val();
            let FestivalTypeIdBonusid = { festivalTypeId: festivalTypeId, bonusId: 0 }
            $.ajax({
                type: "POST",
                url: "@Url.Action("LoadEmployeeByFestivalType", "Bonus")",
                data: FestivalTypeIdBonusid,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                success: function (response) {
                    //var firstValue = response[0].calcRuleId; // Assuming response is an array of objects
                    //$('#CalcRuleID').val(firstValue).trigger('change');
                    divShow("#employeeList");
                    divHide("#bonusList");
                    HTMLEmployeeListBonus(response.data);
                    clearData();
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });



          

        }

        function FixedAmountShowHide() {
            //debugger;
            if ($("#IsFixed").is(":checked")) {
                $(".forFixed").each(function () {
                    if ($(this).hasClass("d-none")) {
                        $(this).removeClass("d-none");
                    }
                });

                $(".forNotFixed").each(function () {
                     if (!$(this).hasClass("d-none")) {
                         $(this).addClass("d-none");
                     }
                });
            }
            else
            {
                $(".forNotFixed").each(function () {
                    if ($(this).hasClass("d-none")) {
                        $(this).removeClass("d-none");
                    }
                });

                $(".forFixed").each(function () {
                     if (!$(this).hasClass("d-none")) {
                         $(this).addClass("d-none");
                     }
                });
                AmountLableChange();
            }
        }

        function divShow(selector) {
            if ($(selector).hasClass("d-none")) {
                $(selector).removeClass("d-none");
            }
        }

        function divHide(selector) {
            if (!$(selector).hasClass("d-none")) {
                $(selector).addClass("d-none");
            }
        }

        function getDateString(date) {
            var d = new Date(date);
            var day = d.getDate();
            var month = d.getMonth() + 1;
            var year = d.getFullYear();
            if (day < 10) {
                day = "0" + day;
            }
            if (month < 10) {
                month = "0" + month;
            }
            var date = day + "-" + month + "-" + year;
            return date;
        }

        function empFestivalBonus(festivalBonusId) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetByFestivalBonusId", "Bonus")",
                data: { festivalBonusId },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response)
                {
                    if (!response.data.isError)
                    {
                        SetBonusData(response.data);
                        
                    }
                    else
                    {
                        WarningPNotify(response.data.message);
                        clearData();
                    }
                },
                failure: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedAttBonus = [];
                },
                error: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedAttBonus = [];
                }
                });

        }

        function SetBonusData(attBonus) {
            //console.log(attBonus);
            const { empId, festivalBonusID, isFixed, applyDate, calcRuleID, fixedAmount, rate, remarks } = attBonus;

            $("#EmpId").val(empId);
            $("#FestivalBonusID").val(festivalBonusID);
            //$("#IsFixed").prop('checked', isFixed);
            //$("#CalcRuleID").val(`${calcRuleID}`).change();
            //$("#FixedAmount").val(fixedAmount);
            //$("#Rate").val(rate);
            //$("#ApplyDate").val(getDateString(applyDate));
            //$("#Remarks").val(remarks);
            showUpdateButton();
            //FixedAmountShowHide();
            divShow("#bonusList");
            divHide("#employeeList");

        }

        function clearData() {
            $("#EmpId").val("");
            $("#FestivalBonusID").val("");
            //$("#IsFixed").prop('checked', false);
            //$("#CalcRuleID").prop("selectedIndex", 0).change();
            //$("#FixedAmount").val("");
            //$("#Rate").val("");
            //$("#ApplyDate").val(getDateString(new Date()));
            //$("#Remarks").val("");

            showSaveButton();
            //FixedAmountShowHide();
            // recall employee list for update emp history id
            //$("#btnEmpFilter").click();
        }

        function showSaveButton() {

            if ($("#btnSave").hasClass("d-none")) {
                $("#btnSave").removeClass("d-none");
            }

            if (!$("#btnUpdate").hasClass("d-none")) {
                $("#btnUpdate").addClass("d-none");
            }

            if (!$("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").addClass("d-none");
            }


        }

        function showUpdateButton() {

            if (!$("#btnSave").hasClass("d-none")) {
                $("#btnSave").addClass("d-none");
            }

            //if ($("#btnUpdate").hasClass("d-none")) {
            //    $("#btnUpdate").removeClass("d-none");
            //}
            if ($("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").removeClass("d-none");
            }

        }

    </script>
}

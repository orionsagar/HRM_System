@model EmployeeType

@{
    var action = ViewBag.Action;
    if (action == "Add")
    {
        ViewData["Title"] = "Employee Type Add";
    }
    else
    {
        ViewData["Title"] = "Employee Type Edit";
    }
    Layout = "~/Views/Shared/_Main_Layout.cshtml";
}

@section PageName {
    @ViewData["Title"]
}
@section Breadcrumb {
    <a href="/dashboard/index">
        <i class="fa fa-home"></i>
    </a>
    <span class="Divider">/</span>
    <a href="/employeetype/index">Employee Type List</a>

    <span class="Divider">/</span>
    @* <span class="section activeCrum">Employee Type Add</span> *@
    <span class="section activeCrum">@ViewData["Title"]</span>
}



@* @{

    string[] BCText = new string[] { "Employee Type List", "Employee Type Add" };
    string[] BCLink = new string[] { "employeetype/index", "employeetype/create" };
    PageHeaderProps pageHeader = new PageHeaderProps
    {
        PageTitle = "Module List",
        PageDesc = "Module List",
        BreadcrumbText = BCText,
        BreadcrumbLink = BCLink
    };
} *@

<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <!-- Basic Inputs Validation start -->
            @* <div class="card-header">
            @await Component.InvokeAsync("PageHeader", pageHeader)
            </div> *@

            <form id="main" asp-action="Create" method="post" class="" novalidate>
                <div class="card">
                    <div class="card-block">


                        <div class="row justify-content-center">
                            <div class="col-sm-6">
                                <div class="form-group row">
                                    <input type="hidden" data-val="true" data-val-required="The EmpTypeId field is required." id="EmpTypeId" name="EmpTypeId" value="">
                                    <input type="hidden" data-val="true" data-val-length="The field AddedBy must be a string with a maximum length of 100." data-val-length-max="100" id="AddedBy" name="AddedBy" value="">
                                    <input type="hidden" data-val="true" data-val-length="The field UpdatedBy must be a string with a maximum length of 100." data-val-length-max="100" id="UpdatedBy" name="UpdatedBy" value="">
                                    <input type="hidden" id="AddedDate" name="AddedDate" value="">
                                    <input type="hidden" id="UpdatedDate" name="UpdatedDate" value="">
                                    <input type="hidden" data-val="true" data-val-required="The CompId field is required." id="CompId" name="CompId" value="">
                                </div>                                
                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <label class="float-label" for="Name">Name</label>
                                    </div>
                                    <div class="col-sm-12">
                                        <input id="Name" placeholder="" class="form-control" required="" type="text" data-val="true" data-val-length="The field Name must be a string with a maximum length of 100." data-val-length-max="100" data-val-required="The Name field is required." maxlength="100" name="Name" value="">
                                        <span class="text-danger form-bar field-validation-valid" data-valmsg-for="Name" data-valmsg-replace="true"></span>
                                    </div>

                                </div>

                                <div class="form-group row" style="display:none">
                                    <input placeholder="" class="form-control" type="text" data-val="true" data-val-length="The field Name(BNG) must be a string with a maximum length of 100." data-val-length-max="100" id="NameGeneric" maxlength="100" name="NameGeneric" value="">
                                    <span class="text-danger form-bar field-validation-valid" data-valmsg-for="NameGeneric" data-valmsg-replace="true"></span>
                                    <label class="float-label" for="NameGeneric">Name(BNG)</label>
                                </div>

                                <div class="form-group row">
                                    <div class="col-sm-12">
                                        <label class="float-label" for="Description">Description</label>
                                    </div>
                                    <div class="col-sm-12">
                                        <input placeholder="" class="form-control" type="text" data-val="true" data-val-length="The field Description must be a string with a maximum length of 500." data-val-length-max="500" id="Description" maxlength="500" name="Description" value="">
                                        <span class="text-danger form-bar field-validation-valid" data-valmsg-for="Description" data-valmsg-replace="true"></span>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="card-block actionBtnRight">
                            <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light m-r-20">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12">
                        <div class="card">
                            @* <div class="card-block actionBtnRight">
                                <input type="submit" value="Submit" class="btn btn-primary waves-effect waves-light m-r-20" />
                            </div> *@
                        </div>
                    </div>
                </div>
            </form>

            <!-- Basic Inputs Validation end -->
        </div>
    </div>
</div>
<input type="hidden" id="IsView" name="IsView" value="@ViewBag.IsView" />
<input type="hidden" id="IsAdd" name="IsAdd" value="@ViewBag.IsAdd" />
<input type="hidden" id="IsDelete" name="IsDelete" value="@ViewBag.IsDelete" />
<input type="hidden" id="IsEdit" name="IsEdit" value="@ViewBag.IsEdit" />

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
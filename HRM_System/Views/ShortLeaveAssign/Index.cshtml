@model ShortLeaveAssign

@inject IGlobalHelper _global;
@{
    //var action = ViewBag.Action;
    var title = "Short Leave Assign";

    ViewData["Title"] = $"{title}";
}

@{

    string[] BCText = new string[] { $"{title}" };
    string[] BCLink = new string[] { $"ShortLeaveAssign/index" };

    PageHeaderProps pageHeader = new PageHeaderProps
    {
        PageTitle = $"{title}",
        PageDesc = $"{title}",
        //PageCreateLink = createlink,
        //PageCreateLinkName = linkname,
        BreadcrumbText = BCText,
        BreadcrumbLink = BCLink
    };
    var ComId = _global.GetCompID();
    var UserId = _global.GetUserID();
}

<style>
    label {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    #dt-emp-list {
        display: block;
        max-height: 400px;
        overflow-y: auto;
    }
</style>

@section PageName {
    Short Leave Assign
}
@section Breadcrumb {
    <a href="/shortleaveassign/index">
        <i class="fa fa-home"></i>
    </a>
    <span class="Divider">/</span>
    <span class="section activeCrum">Short Leave Assign</span>
}
@Html.AntiForgeryToken()
<!-- Page-body start -->
<div class="page-body">
    <div class="row">
        <div class="col-sm-12">
            <!-- Ajax data source (Arrays) table start -->
            <div id="loader">
                <div class="overlay"></div>
                <div class="card">
                    @* <div class="card-header">
                        @await Component.InvokeAsync("PageHeader", pageHeader)
                    </div> *@
                    <div class="card-block">
                        @*@await Component.InvokeAsync("EmployeeFilter")*@
                        <div class="row">
                            <partial name="_Filter" />

                            <div class="col-sm-5 px-lg-5">

                                <div class="row mb-2">
                                    <input type="hidden" asp-for="EmpId" />
                                    <input type="hidden" asp-for="ShortLeaveAssignId" />

                                    <div class="col-sm-10">
                                        <div class="form-group row">
                                            <label asp-for="EffectiveDate" class="col-sm-4 col-form-label">Effective Date</label>
                                            <div class="col-sm-8">
                                                <input asp-for="EffectiveDate" required type="text" class="form-control form-control-sm" />
                                                <span asp-validation-for="EffectiveDate" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-10">
                                        <div class="form-group row">
                                            <label asp-for="From" class="col-sm-4 col-form-label">From</label>
                                            <div class="col-sm-8">
                                                <input asp-for="From" required type="time" class="form-control form-control-sm" />
                                                <span asp-validation-for="From" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-10">
                                        <div class="form-group row">
                                            <label asp-for="To" class="col-sm-4 col-form-label">To</label>
                                            <div class="col-sm-8">
                                                <input asp-for="To" required type="time" class="form-control form-control-sm" />
                                                <span asp-validation-for="To" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="col-sm-10">
                                        <div class="form-group row">
                                            <label asp-for="Remark" class="col-sm-4 col-form-label">Remarks</label>
                                            <div class="col-sm-8">
                                                <textarea asp-for="Remark" type="text" class="form-control form-control-sm"></textarea>
                                                <span asp-validation-for="Remark" class="text-danger"></span>
                                            </div>
                                        </div>
                                    </div>

                                </div>

                                <div class="row justify-content-center">
                                    <div class="col-12 col-sm-8 text-center">
                                        <button class="btn btn-sm btn-success" id="btnSave">Save</button>
                                        <button class="btn btn-sm btn-warning d-none" id="btnUpdate">Update</button>
                                        <button class="btn btn-sm btn-danger d-none" id="btnDelete">Delete</button>
                                        <button class="btn btn-sm btn-light btn-outline-info" id="btnClear">Clear</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr />

                        <div class="row m-0 mt-2">

                            <div class="col-sm-12" id="employeeList">
                                <p class="m-1 font-weight-bold">Employee List</p>

                                <div class="table-responsive dt-responsive">

                                    <table id="dt-emp-list" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>

                                                <th>

                                                    <div class="checkbox-fade fade-in-primary ml-3">
                                                        <label class="m-0">
                                                            <input type="checkbox" id="empAllCheck" name="empAllCheck">
                                                            <span class="cr">
                                                                <i class="cr-icon icofont icofont-ui-check txt-primary"></i>
                                                            </span>
                                                        </label>
                                                    </div>
                                                </th>
                                                <th>Employee</th>
                                                <th>Card No</th>
                                                <th>Designation</th>
                                                <th>Setup Days</th>
                                                <th>Assign Days</th>
                                                <th>Joining Date</th>
                                                <th>Section</th>
                                                <th>Department</th>
                                                <th>Category</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>

                                </div>
                            </div>

                            <div class="col-sm-12 d-none" id="shortLeaveAssignList">
                                <p class="m-1 font-weight-bold">Short Leave Assign List</p>

                                <div class="table-responsive dt-responsive">

                                    <table id="dt-emp-shortLeave-list" class="table table-hover table-striped table-bordered nowrap">
                                        <thead>
                                            <tr>
                                                <th class="d-none">ShortLeaveAssignId</th>
                                                <th>Name</th>
                                                <th>Card No</th>
                                                <th>Designation</th>
                                                <th>Department</th>
                                                <th>Section</th>
                                                @*<th>Category</th>
                                                    <th>Department</th>*@
                                                <th>Effective Date</th>
                                                <th>From</th>
                                                <th>To</th>
                                                <th>Remarks</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>


                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <!-- Ajax data source (Arrays) table end -->
            </div>
        </div>
    </div>
</div>
<!-- Page-body end -->
<input type="hidden" id="IsView" name="IsView" value="@ViewBag.IsView" />
<input type="hidden" id="IsAdd" name="IsAdd" value="@ViewBag.IsAdd" />
<input type="hidden" id="IsDelete" name="IsDelete" value="@ViewBag.IsDelete" />
<input type="hidden" id="IsEdit" name="IsEdit" value="@ViewBag.IsEdit" />

@section Scripts {
    <script>
        let empSelectedShortLeaveAssign = [];

        let emp_shortLeave_list_table;

        $(document).ready(function () {
            //$('#dt-emp-list').DataTable({
            //    dom: '<"top"i>rt<"bottom"flp><"clear">',
            //});

            $('#dt-emp-shortLeave-list tbody').on('click', 'tr', function () {
                //const tr = $(this).closest('tr')
                //$(tr).toggleClass('selected');

                if ($(this).hasClass('selected')) {
                    $(this).removeClass('selected');
                    clearData();
                } else {
                    emp_shortLeave_list_table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    const leaveId = emp_shortLeave_list_table.row(this).data()[0];
                    empShortLeaveAssign(leaveId);
                }
            });

            $("#ShortLeaveAssignName, #Type_Filter").select2();

            $("#FromDate_Filter, #ToDate_Filter, #EffectiveDate").datepicker({
                dateFormat: 'dd-mm-yy',
                changeYear: true,
                changeMonth: true,
            });

            $("#FromDate_Filter, #ToDate_Filter, #EffectiveDate").datepicker("setDate", new Date());

            emp_shortLeave_list_table = $('#dt-emp-shortLeave-list').DataTable({
                paging: false,
                "dom": '<"pull-left"f><"pull-right"l>tip',
                select:true,
                //scrollY: 250,
                //searching:false,
                columnDefs: [
                    {
                        targets: 0,
                        visible: false,
                        searchable: false,
                    },
                ]
            });

            $("#btnEmpFilter").click(function () {
                divShow("#employeeList");
                divHide("#shortLeaveAssignList");
                let filter = {
                    //EffectiveDate: $("#EffectiveDate").val(),
                    EmpCategoryId_Filter: $("#EmpCategoryId_Filter").val(),
                    DesignationId_Filter: $("#DesignationId_Filter").val(),
                    SectionId_Filter: $("#SectionId_Filter").val(),
                    DepartmentId_Filter: $("#DepartmentId_Filter").val(),
                    CardNo_Filter: $("#CardNo_Filter").val()||"",
                   // EmpName_Filter: $("#EmpName_Filter").val() || "",
                    CompId: '@ComId',
                }
                //console.log(filter);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LoadEmployee", "ShortLeaveAssign")",
                    data: filter,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        HTMLEmployeeShortLeaveList(response);
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            });

            $("#btnShortLeaveAssignFind").click(function () {
                divShow("#shortLeaveAssignList");
                divHide("#employeeList");

                let filter = {
                    EmpCategoryId_Filter: $("#EmpCategoryId_Filter").val(),
                    DesignationId_Filter: $("#DesignationId_Filter").val(),
                    SectionId_Filter: $("#SectionId_Filter").val(),
                    DepartmentId_Filter: $("#DepartmentId_Filter").val(),
                    CardNo_Filter: $("#CardNo_Filter").val() || "",
                    FromDate_Filter: $("#FromDate_Filter").val(),
                    ToDate_Filter: $("#ToDate_Filter").val(),
                    CompId: '@ComId',
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("LoadShortLeaveAssign", "ShortLeaveAssign")",
                    data: filter,
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        HTMLEmpShortLeaveAssignList(response);
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            });

            $("#btnDelete").click(function () {
                if (!confirm("Are you confirm to delete?")) {
                    return;
                }
                const shortLeaveAssignId = $("#ShortLeaveAssignId").val();

                if (shortLeaveAssignId == "" || shortLeaveAssignId == 0) {
                    WarningPNotify("Please select Short Leave Assign data!!");
                    return;
                }

                $.ajax({
                    type: "DELETE",
                    url: "@Url.Action("Delete", "ShortLeaveAssign")",
                    data: { shortLeaveAssignId },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                            $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                            SuccessPNotify(res.message);
                            clearData();
                            showSaveButton();
                            $("#btnShortLeaveAssignFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }
                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });

            })

            $("#btnSave").click(function () {
                let employees = [];

                const remark = $("#Remark").val()||"";
                const from = $("#From").val();
                const to = $("#To").val();
                const EffectiveDate = $("#EffectiveDate").val();


                if (EffectiveDate == "" || from == "" || to == "") {
                    WarningPNotify("Please select Date and Time");
                    return;
                }

                $("input[name='empCheckbox']:checked").each(function () {
                    //console.log($(this).val());
                    employees.push(
                        {
                            @nameof(ShortLeaveAssign.ShortLeaveAssignId) : 0,
                            @nameof(ShortLeaveAssign.EmpId) : $(this).val(),
                            @nameof(ShortLeaveAssign.EffectiveDate) : EffectiveDate,
                            @nameof(ShortLeaveAssign.From) : from,
                            @nameof(ShortLeaveAssign.To) : to,
                            @nameof(ShortLeaveAssign.Remark) : remark,
                        });
                });

                if (employees.length<1) {
                    WarningPNotify("Please select Employee");
                    return;
                }

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Create", "ShortLeaveAssign")",
                    data: {model:employees},
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                           // SuccessPNotify("Employee Job Calender Updated");
                            SuccessPNotify(res.message);
                            clearData();
                            $("#btnShortLeaveAssignFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }

                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });


            })

            $("#btnUpdate").click(function () {
                let employees = [];

                const ShortLeaveAssignId = $("#ShortLeaveAssignId").val()||0;
                const empId = $("#EmpId").val()||"";
                const remark = $("#Remark").val() || "";
                const from = $("#From").val();
                const to = $("#To").val();
                const EffectiveDate = $("#EffectiveDate").val();
                debugger;

                if (ShortLeaveAssignId ==0) {
                    WarningPNotify("No data found. Please select leave data again.");
                    return;
                }

                if (EffectiveDate == "" || from == "" || to == "") {
                    WarningPNotify("Please select Date and Time");
                    return;
                }


                employees.push(
                    {
                         @nameof(ShortLeaveAssign.ShortLeaveAssignId) : ShortLeaveAssignId,
                         @nameof(ShortLeaveAssign.EmpId) : empId,
                         @nameof(ShortLeaveAssign.EffectiveDate) : EffectiveDate,
                         @nameof(ShortLeaveAssign.From) : from,
                         @nameof(ShortLeaveAssign.To) : to,
                         @nameof(ShortLeaveAssign.Remark) : remark,
                    });


                if (employees.length<1) {
                    WarningPNotify("Please select Employee");
                    return;
                }

                //console.log(employees);

                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Create", "ShortLeaveAssign")",
                    data: {model:employees},
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                    },
                    //contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (res) {
                        if (!res.isError) {
                           // SuccessPNotify("Employee Job Calender Updated");
                            SuccessPNotify(res.message);
                            clearData();
                            $("#btnShortLeaveAssignFind").click();
                        } else {
                            DangerPNotify(res.message);
                        }

                    },
                    failure: function (response) {
                        DangerPNotify(response.responseText);
                    },
                    error: function (response) {
                        DangerPNotify(response.responseText);
                    }
                });


             });

            $("#empAllCheck").click(function () {
                let check = $(this).is(":checked");
                if (check) {
                    $("input[name='empCheckbox']").prop('checked', true);
                } else {
                    $("input[name='empCheckbox']").prop('checked', false);
                }
            });

            $("#btnClear").click(function () {
                clearData();
                showSaveButton();
            });



            $("#btnEmpFilter").click();



            //FixedAmountShowHide();
            //AmountLableChange();

            divShow("#employeeList");
            divHide("#shortLeaveAssignList");
        });

        function HTMLEmployeeShortLeaveList(tr) {
            tr = tr || [];

            emp_list_table.clear().draw();

            tr.map(a => {
                a.joiningDate = getDateString(a.joiningDate);
                a.leaveDays = a.leaveDays == 0 ? "" : a.leaveDays;
                a.leaveEnjoyCurrentMonth = a.leaveEnjoyCurrentMonth == 0 ? "" : a.leaveEnjoyCurrentMonth;
                emp_list_table.row.add([
                    a.empId,
                    a.name,
                    a.cardNo,
                    a.designationName,
                    a.leaveDays,
                    a.leaveEnjoyCurrentMonth,
                    a.joiningDate,
                    a.sectionName,
                    a.departmentName,
                    a.categoryName,
                ]);
            });

            emp_list_table.draw();
        }

        function HTMLEmpShortLeaveAssignList(tr) {
            tr = tr || [];
            //console.log(tr);
            emp_shortLeave_list_table.clear().draw();

            tr.map(a => {
                a.effectiveDate = ConvertDateString(a.effectiveDate);
                a.from = GetmeridianTime(a.from);
                a.to = GetmeridianTime(a.to);
                emp_shortLeave_list_table.row.add([
                    a.shortLeaveAssignID,
                    a.name,
                    a.cardNo,
                    a.designationName,
                    a.departmentName,
                    a.sectionName,
                   // a.categoryName,
                    a.effectiveDate,
                    a.from,
                    a.to,
                    a.remark,
                ]);
            });

            emp_shortLeave_list_table.draw();
        }



        function divShow(selector) {
            if ($(selector).hasClass("d-none")) {
                $(selector).removeClass("d-none");
            }
        }

        function divHide(selector) {
            if (!$(selector).hasClass("d-none")) {
                $(selector).addClass("d-none");
            }
        }



        function empShortLeaveAssign(shortLeaveAssignId) {

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetById", "ShortLeaveAssign")",
                data: { shortLeaveAssignId },
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                //contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response)
                {
                    if (!response.data.isError)
                    {
                        empSelectedShortLeaveAssign = response.data;
                        SetShortLeaveAssignData(response.data);
                    }
                    else
                    {
                        WarningPNotify(response.data.message);
                        clearData();
                    }
                },
                failure: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedShortLeaveAssign = [];
                },
                error: function (response) {
                    DangerPNotify(response.responseText);
                    empSelectedShortLeaveAssign = [];
                }
                });

        }

        function SetShortLeaveAssignData(leave) {

            const { empId, shortLeaveAssignId, effectiveDate, from, to, remark, } = leave;
            //console.log(ConvertTimeString(from));
            $("#EmpId").val(empId);
            $("#ShortLeaveAssignId").val(shortLeaveAssignId);
            $("#From").val(ConvertTimeString(from));
            $("#To").val(ConvertTimeString(to));
            $("#Remark").val(remark);
            $("#EffectiveDate").val(ConvertDateString(effectiveDate));
            showUpdateButton();
        }

        function clearData() {
            $("#EmpId").val("");
            $("#ShortLeaveAssignId").val("");
            $("#EffectiveDate").val(ConvertDateString(new Date()));
            $("#From").val("");
            $("#To").val("");
            $("#Remark").val("");
            showSaveButton();
        }

        function showSaveButton() {

            if ($("#btnSave").hasClass("d-none")) {
                $("#btnSave").removeClass("d-none");
            }

            if (!$("#btnUpdate").hasClass("d-none")) {
                $("#btnUpdate").addClass("d-none");
            }

            if (!$("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").addClass("d-none");
            }
        }

        function showUpdateButton() {

            if (!$("#btnSave").hasClass("d-none")) {
                $("#btnSave").addClass("d-none");
            }

            if ($("#btnUpdate").hasClass("d-none")) {
                $("#btnUpdate").removeClass("d-none");
            }
            if ($("#btnDelete").hasClass("d-none")) {
                $("#btnDelete").removeClass("d-none");
            }

        }

    </script>
}